import { PresenceComponent } from '@fluentui/react-motion';

/**
 * Common opacity animation parameter for motion components.
 */
declare type AnimateOpacity = {
    /** Whether to animate the opacity. Defaults to `true`. */
    animateOpacity?: boolean;
};

declare type Axis3D = 'x' | 'y' | 'z';

/**
 * Base presence parameters combining duration, easing, and delay for motion components.
 */
declare type BasePresenceParams = PresenceDuration & PresenceEasing & PresenceDelay;

/** A React component that applies blur in/out transitions to its children. */
export declare const Blur: PresenceComponent<BlurParams>;

export declare type BlurParams = BasePresenceParams & AnimateOpacity & {
    /** The radius of pixels to blend into the blur. A length string, defaulting to '20px'. */
    fromRadius?: string;
};

/** A React component that applies collapse/expand transitions to its children. */
export declare const Collapse: PresenceComponent<CollapseParams>;

/** Common properties shared by all collapse components */
declare type CollapseBaseParams = PresenceEasing & PresenceDelay & AnimateOpacity & {
    /** The orientation of the size animation. Defaults to `'vertical'` to expand/collapse the height. */
    orientation?: CollapseOrientation;
};

/** A React component that applies collapse/expand transitions with delayed fade to its children. */
export declare const CollapseDelayed: PresenceComponent<CollapseDelayedParams>;

export declare type CollapseDelayedParams = CollapseBaseParams & {
    /** Time (ms) for the size expand. Defaults to the `durationNormal` value (200 ms). */
    sizeDuration?: number;
    /** Time (ms) for the fade-in. Defaults to the `sizeDuration` param, to sync fade-in with expand. */
    opacityDuration?: number;
    /** Time (ms) for the size collapse. Defaults to the `sizeDuration` param, for temporal symmetry. */
    exitSizeDuration?: number;
    /** Time (ms) for the fade-out. Defaults to the `exitSizeDuration` param, to sync the fade-out with the collapse. */
    exitOpacityDuration?: number;
    /** Time (ms) between the size expand start and the fade-in start. Defaults to `0`. */
    delay?: number;
    /** Time (ms) between the fade-out start and the size collapse start. Defaults to `0`. */
    exitDelay?: number;
};

declare type CollapseOrientation = 'horizontal' | 'vertical';

export declare type CollapseParams = BasePresenceParams & AnimateOpacity & {
    /** The orientation of the size animation. Defaults to `'vertical'` to expand/collapse the height. */
    orientation?: CollapseOrientation;
};

export declare const CollapseRelaxed: PresenceComponent<CollapseParams>;

export declare const CollapseSnappy: PresenceComponent<CollapseParams>;

/** A React component that applies fade in/out transitions to its children. */
export declare const Fade: PresenceComponent<BasePresenceParams>;

export declare type FadeParams = BasePresenceParams;

export declare const FadeRelaxed: PresenceComponent<BasePresenceParams>;

export declare const FadeSnappy: PresenceComponent<BasePresenceParams>;

/**
 * Common delay parameters for presence motion components.
 */
declare type PresenceDelay = {
    /** Time (ms) to delay the enter transition. */
    delay?: EffectTiming['delay'];
    /** Time (ms) to delay the exit transition. Defaults to the `delay` param for symmetry. */
    exitDelay?: EffectTiming['delay'];
};

/**
 * Common duration parameters for presence motion components.
 */
declare type PresenceDuration = {
    /** Time (ms) for the enter transition. */
    duration?: number;
    /** Time (ms) for the exit transition. Defaults to the `duration` param for symmetry. */
    exitDuration?: number;
};

/**
 * Common easing parameters for presence motion components.
 */
declare type PresenceEasing = {
    /** Easing curve for the enter transition. */
    easing?: string;
    /** Easing curve for the exit transition. Defaults to the `easing` param for symmetry. */
    exitEasing?: string;
};

export declare const Rotate: PresenceComponent<RotateParams>;

export declare type RotateParams = BasePresenceParams & AnimateOpacity & {
    /**
     * The axis of rotation: 'x', 'y', or 'z'.
     * Defaults to 'y'.
     */
    axis?: Axis3D;
    /**
     * The starting rotation angle in degrees.
     * Defaults to -90.
     */
    angle?: number;
    /**
     * The ending rotation angle in degrees.
     * Defaults to the negation of `angle`.
     */
    exitAngle?: number;
};

/** A React component that applies scale in/out transitions to its children. */
export declare const Scale: PresenceComponent<ScaleParams>;

export declare type ScaleParams = BasePresenceParams & AnimateOpacity & {
    /** The scale value to animate from. Defaults to `0.9`. */
    fromScale?: number;
};

export declare const ScaleRelaxed: PresenceComponent<ScaleParams>;

export declare const ScaleSnappy: PresenceComponent<ScaleParams>;

/** A React component that applies slide in/out transitions to its children. */
export declare const Slide: PresenceComponent<SlideParams>;

export declare type SlideParams = BasePresenceParams & AnimateOpacity & {
    /** The X translate value with units to animate from. Defaults to `'0px'`. */
    fromX?: string;
    /** The Y translate value with units to animate from. Defaults to `'20px'`. */
    fromY?: string;
};

export declare const SlideRelaxed: PresenceComponent<SlideParams>;

export declare const SlideSnappy: PresenceComponent<SlideParams>;

export { }
